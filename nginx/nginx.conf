# =============================================================================
# FAJMA Main Nginx Configuration
# Reverse Proxy for Frontend and Backend Services
# =============================================================================

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Load dynamic modules
load_module modules/ngx_http_realip_module.so;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
    accept_mutex off;
}

http {
    # =============================================================================
    # BASIC SETTINGS
    # =============================================================================
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Server tokens
    server_tokens off;
    
    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    log_format json escape=json
        '{'
            '"timestamp":"$time_iso8601",' 
            '"remote_addr":"$remote_addr",' 
            '"remote_user":"$remote_user",' 
            '"request":"$request",' 
            '"status":$status,' 
            '"body_bytes_sent":$body_bytes_sent,' 
            '"http_referer":"$http_referer",' 
            '"http_user_agent":"$http_user_agent",' 
            '"http_x_forwarded_for":"$http_x_forwarded_for",' 
            '"request_time":$request_time,' 
            '"upstream_connect_time":$upstream_connect_time,' 
            '"upstream_header_time":$upstream_header_time,' 
            '"upstream_response_time":$upstream_response_time'
        '}';
    
    access_log /var/log/nginx/access.log main;
    
    # =============================================================================
    # PERFORMANCE SETTINGS
    # =============================================================================
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100;
    types_hash_max_size 2048;
    client_max_body_size 100M;
    
    # Buffer settings
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;
    
    # Timeouts
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;
    
    # =============================================================================
    # GZIP COMPRESSION
    # =============================================================================
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;
    
    # =============================================================================
    # SECURITY HEADERS
    # =============================================================================
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    
    # Content Security Policy
    add_header Content-Security-Policy 
        "default-src 'self'; 
         script-src 'self' 'unsafe-inline' 'unsafe-eval'; 
         style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; 
         font-src 'self' https://fonts.gstatic.com; 
         img-src 'self' data: https:; 
         connect-src 'self' ws: wss: http: https:; 
         frame-ancestors 'self'; 
         base-uri 'self'; 
         form-action 'self';" always;
    
    # =============================================================================
    # RATE LIMITING
    # =============================================================================
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;
    limit_req_zone $binary_remote_addr zone=websocket:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=2r/s;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    limit_conn_zone $server_name zone=conn_limit_per_server:10m;
    
    # =============================================================================
    # UPSTREAM DEFINITIONS
    # =============================================================================
    
    # Backend API upstream
    upstream backend_api {
        least_conn;
        server backend:8000 max_fails=3 fail_timeout=30s;
        # Add more backend servers for load balancing
        # server backend2:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    # Frontend upstream
    upstream frontend_app {
        server frontend:3000 max_fails=3 fail_timeout=30s;
        # Add more frontend servers for load balancing
        # server frontend2:3000 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }
    
    # =============================================================================
    # SSL CONFIGURATION (for production)
    # =============================================================================
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # =============================================================================
    # MAIN SERVER CONFIGURATION
    # =============================================================================
    
    server {
        listen 80;
        listen [::]:80;
        server_name localhost fajma.local;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        
        # Connection limits
        limit_conn conn_limit_per_ip 10;
        limit_conn conn_limit_per_server 100;
        
        # Logging
        access_log /var/log/nginx/fajma_access.log main;
        error_log /var/log/nginx/fajma_error.log warn;
        
        # =============================================================================
        # API ROUTES
        # =============================================================================
        
        # API endpoints
        location /api/ {
            # Rate limiting
            limit_req zone=api burst=20 nodelay;
            
            # Proxy settings
            proxy_pass http://backend_api;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
        }
        
        # Authentication endpoints (stricter rate limiting)
        location ~ ^/api/(auth|login|register|password-reset)/ {
            limit_req zone=login burst=5 nodelay;
            
            proxy_pass http://backend_api;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Longer timeout for auth operations
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # File upload endpoints
        location ~ ^/api/(upload|media)/ {
            limit_req zone=upload burst=10 nodelay;
            
            # Increase client body size for uploads
            client_max_body_size 100M;
            client_body_timeout 300s;
            
            proxy_pass http://backend_api;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Extended timeouts for uploads
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # Disable buffering for large uploads
            proxy_request_buffering off;
        }
        
        # =============================================================================
        # WEBSOCKET ROUTES
        # =============================================================================
        
        # WebSocket connections
        location /ws/ {
            limit_req zone=websocket burst=10 nodelay;
            
            proxy_pass http://backend_api;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket specific settings
            proxy_buffering off;
            proxy_cache off;
            proxy_read_timeout 86400s;
            proxy_send_timeout 86400s;
            proxy_connect_timeout 60s;
            
            # Keep connection alive
            proxy_set_header Connection "upgrade";
        }
        
        # =============================================================================
        # STATIC FILES AND MEDIA
        # =============================================================================
        
        # Django static files
        location /static/ {
            alias /app/staticfiles/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options "nosniff" always;
            
            # CORS for static assets
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, OPTIONS";
        }
        
        # Django media files
        location /media/ {
            alias /app/media/;
            expires 30d;
            add_header Cache-Control "public";
            add_header X-Content-Type-Options "nosniff" always;
            
            # Security for media files
            location ~* \.(php|jsp|asp|sh|py|pl|exe)$ {
                deny all;
            }
        }
        
        # =============================================================================
        # FRONTEND APPLICATION
        # =============================================================================
        
        # Frontend static assets
        location /assets/ {
            proxy_pass http://frontend_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Cache static assets
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        # Frontend application (catch-all)
        location / {
            proxy_pass http://frontend_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # =============================================================================
        # HEALTH CHECKS AND MONITORING
        # =============================================================================
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Nginx status (for monitoring)
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }
        
        # =============================================================================
        # ERROR PAGES
        # =============================================================================
        
        # Custom error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        # =============================================================================
        # SECURITY RESTRICTIONS
        # =============================================================================
        
        # Deny access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Deny access to backup files
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Deny access to configuration files
        location ~* \.(conf|config|ini|sql|bak|backup)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Block common exploit attempts
        location ~* /(wp-admin|wp-login|phpmyadmin|admin|administrator) {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
    
    # =============================================================================
    # HTTPS SERVER (Production)
    # =============================================================================
    
    # Uncomment and configure for production with SSL
    # server {
    #     listen 443 ssl http2;
    #     listen [::]:443 ssl http2;
    #     server_name your-domain.com;
    #     
    #     # SSL Configuration
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     ssl_trusted_certificate /etc/nginx/ssl/chain.pem;
    #     
    #     # HSTS
    #     add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    #     
    #     # Include the same location blocks as above
    #     # ...
    # }
    # 
    # # Redirect HTTP to HTTPS
    # server {
    #     listen 80;
    #     listen [::]:80;
    #     server_name your-domain.com;
    #     return 301 https://$server_name$request_uri;
    # }
}